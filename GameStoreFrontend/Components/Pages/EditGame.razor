@page "/editgame"
@page "/editgame/{id:int}"

@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject GenresClient GenresClient

<PageTitle>New game</PageTitle>
<h3>New Game</h3>
@if (genres is null || game is null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <InputText id="name" @bind-Value="game.Name" class="form-control" />
                    <ValidationMessage For="() => game.Name"></ValidationMessage>
                </div>

                <div class="mb-3">
                    <label for="genre" class="form-label">Genre</label>
                    <InputSelect id="genre" @bind-Value="game.GenreId" class="form-select">
                        <option value="">Select a genre</option>
                        @foreach (var genre in genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => game.GenreId"></ValidationMessage>
                </div>

                <div class="mb-3">
                    <label for="price" class="form-label">Price</label>
                    <InputNumber id="price" @bind-Value="game.Price" class="form-control" />
                    <ValidationMessage For="() => game.Price"></ValidationMessage>
                </div>

                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date</label>
                    <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
                <a role="button" class="btn btn-secondary" href="/">Cancel</a>
            </EditForm>
        </div>
    </div>
}
@code {
    [Parameter]
    public int? Id {get; set;}

    [SupplyParameterFromForm] // So blazor knows that game has all the values needed for the server
    private GameDetails? game { get; set; }

    private Genre[]? genres;

    protected override void OnParametersSet()
    {
        if (Id is not null)
        {
            game = GamesClient.GetGame(Id.Value);
        }
        else
        {
            game = new()
            {
                Name = string.Empty,
                ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
            };
        }
    }



    protected override void OnInitialized()
    {
        genres = GenresClient.GetGenres();
    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(game);
        GamesClient.AddGame(game);
        NavigationManager.NavigateTo("/");
    }
}
